{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":804181,"sourceType":"datasetVersion","datasetId":421200}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-19T14:11:09.387417Z","iopub.execute_input":"2024-07-19T14:11:09.388072Z","iopub.status.idle":"2024-07-19T14:11:09.787278Z","shell.execute_reply.started":"2024-07-19T14:11:09.388031Z","shell.execute_reply":"2024-07-19T14:11:09.786231Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/online-retail-dataset/online_retail_II.xlsx\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom datetime import datetime\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-07-19T14:11:09.789102Z","iopub.execute_input":"2024-07-19T14:11:09.789565Z","iopub.status.idle":"2024-07-19T14:11:10.517134Z","shell.execute_reply.started":"2024-07-19T14:11:09.789536Z","shell.execute_reply":"2024-07-19T14:11:10.515699Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# Load the datasets from the Kaggle file\ndf_2009_2010 = pd.read_excel('/kaggle/input/online-retail-dataset/online_retail_II.xlsx', sheet_name='Year 2009-2010')\ndf_2010_2011 = pd.read_excel('/kaggle/input/online-retail-dataset/online_retail_II.xlsx', sheet_name='Year 2010-2011')\n\n# Combine the datasets\ndf_combined = pd.concat([df_2009_2010, df_2010_2011], ignore_index=True)\n\n# Data cleaning\n# Remove rows with missing Customer ID\ndf_combined = df_combined.dropna(subset=['Customer ID'])\n\n# Remove duplicates\ndf_combined = df_combined.drop_duplicates()\n\ndf_combined.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-19T14:11:10.518562Z","iopub.execute_input":"2024-07-19T14:11:10.518911Z","iopub.status.idle":"2024-07-19T14:13:26.760751Z","shell.execute_reply.started":"2024-07-19T14:11:10.518880Z","shell.execute_reply":"2024-07-19T14:13:26.759608Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 797885 entries, 0 to 1067370\nData columns (total 8 columns):\n #   Column       Non-Null Count   Dtype         \n---  ------       --------------   -----         \n 0   Invoice      797885 non-null  object        \n 1   StockCode    797885 non-null  object        \n 2   Description  797885 non-null  object        \n 3   Quantity     797885 non-null  int64         \n 4   InvoiceDate  797885 non-null  datetime64[ns]\n 5   Price        797885 non-null  float64       \n 6   Customer ID  797885 non-null  float64       \n 7   Country      797885 non-null  object        \ndtypes: datetime64[ns](1), float64(2), int64(1), object(4)\nmemory usage: 54.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# Feature engineering\n# Calculate Total Purchase for each row\ndf_combined['TotalPurchase'] = df_combined['Quantity'] * df_combined['Price']\n\n# Calculate Recency, Frequency, and Monetary value (RFM)\n# Recency: Number of days since last purchase\ndf_combined['InvoiceDate'] = pd.to_datetime(df_combined['InvoiceDate'])\nsnapshot_date = max(df_combined['InvoiceDate']) + pd.DateOffset(1)\nrfm = df_combined.groupby('Customer ID').agg({\n    'InvoiceDate': lambda x: (snapshot_date - x.max()).days,\n    'Invoice': 'nunique',\n    'TotalPurchase': 'sum'\n}).reset_index()\nrfm.columns = ['Customer ID', 'Recency', 'Frequency', 'Monetary']\n\n# Split data into training and testing sets\ntrain, test = train_test_split(rfm, test_size=0.2, random_state=42)\n\n# Separate features and target\nX_train = train[['Recency', 'Frequency', 'Monetary']]\ny_train = train['Monetary']\nX_test = test[['Recency', 'Frequency', 'Monetary']]\ny_test = test['Monetary']\n\n# Model training\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Predictions\ny_pred = model.predict(X_test)\n\n# Evaluation\nmae = mean_absolute_error(y_test, y_pred)\nrmse = np.sqrt(mean_squared_error(y_test, y_pred))\n\nprint(f'MAE: {mae}')\nprint(f'RMSE: {rmse}')\n\n# Interpretation\ncoef = pd.DataFrame(model.coef_, X_train.columns, columns=['Coefficient'])\nprint(coef)","metadata":{"execution":{"iopub.status.busy":"2024-07-19T14:13:26.762093Z","iopub.execute_input":"2024-07-19T14:13:26.762525Z","iopub.status.idle":"2024-07-19T14:13:29.011116Z","shell.execute_reply.started":"2024-07-19T14:13:26.762496Z","shell.execute_reply":"2024-07-19T14:13:29.009916Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"MAE: 1.2664912581363883e-12\nRMSE: 7.300417677440851e-12\n            Coefficient\nRecency   -3.196847e-15\nFrequency -7.216450e-15\nMonetary   1.000000e+00\n","output_type":"stream"}]},{"cell_type":"code","source":"# Plotting the actual vs predicted values\nplt.figure(figsize=(10, 6))\nplt.scatter(y_test, y_pred, alpha=0.3)\nplt.xlabel('Actual TotalSpent')\nplt.ylabel('Predicted TotalSpent')\nplt.title('Actual vs Predicted TotalSpent')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-19T14:13:29.013666Z","iopub.execute_input":"2024-07-19T14:13:29.014435Z","iopub.status.idle":"2024-07-19T14:13:29.314067Z","shell.execute_reply.started":"2024-07-19T14:13:29.014397Z","shell.execute_reply":"2024-07-19T14:13:29.312774Z"},"trusted":true},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]}]}